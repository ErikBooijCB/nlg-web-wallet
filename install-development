#!/bin/bash

BLUE='\033[1;36m'
GREEN='\033[1;32m'
NC='\033[0m' # No Color

printf "\n === ${BLUE}Stopping and recreating Docker containers${NC} === \n\n"
docker-compose down -v
docker-compose up -d
printf "\n${GREEN}Done, containers have been built!${NC}\n"

printf "\n === ${BLUE}Installing dependencies${NC} === \n\n"
composer install
printf "\n${GREEN}Done, dependencies have been installed!${NC}\n"

printf "\n === ${BLUE}Waiting for database container to become available${NC} === \n\n"
while ! mysqladmin ping -h127.0.0.1 --silent; do
    echo 'Waiting...'
    sleep 1

    ((c++)) && ((c==20)) && break
done
printf "\n${GREEN}Done, database container is ready!${NC}\n"

printf "\n === ${BLUE}Running Docker Containers:${NC} === \n\n"
docker-compose ps

if [ "$TRAVIS" = "true" ]; then
  printf "\n === ${BLUE}Running Docker Containers [TRAVIS ONLY]:${NC} === \n\n"

  docker ps -a
fi

printf "\n === ${BLUE}Preparing database for migration${NC} === \n\n"
cat docker/pre-migration.sql | mysql -h127.0.0.1 -uroot -ptesttest --silent
printf "\n${GREEN}Done, database is prepared!${NC}\n"

printf "\n === ${BLUE}Migrating database${NC} === \n\n"
./vendor/bin/phinx migrate
printf "\n${GREEN}Done, database is migrated!${NC}\n"

printf "\n === ${BLUE}Provisioning sample data${NC} === \n\n"
./vendor/bin/phinx seed:run
printf "\n${GREEN}Done, database has been provisioned with sample data!${NC}\n"
